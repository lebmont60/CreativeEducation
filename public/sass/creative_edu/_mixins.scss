//Utilities
@import "mixins/transparency";
@import "mixins/sidebar-color";

// Placeholder text
@mixin material-placeholder() {
    &::-moz-placeholder {
        @content;
    } // Firefox
    &:-ms-input-placeholder {
        @content;
    } // Internet Explorer 10+
    &::-webkit-input-placeholder {
        @content;
    } // Safari and Chrome
}

@mixin button-variations-content($args) {
    //@debug "#{inspect($args)}";
    $variation-color: map-get($args, variation-color);
    $db-param-1: map-get($args, material-param-1);
    background-color: contrast-color($variation-color,
    darken($variation-color, $db-param-1),
    lighten($variation-color, $db-param-1));
}

@mixin transition($time, $type) {
    -webkit-transition: all $time $type;
    -moz-transition: all $time $type;
    -o-transition: all $time $type;
    -ms-transition: all $time $type;
    transition: all $time $type;
}

@mixin transform-scale($value) {
    -webkit-transform: scale($value);
    -moz-transform: scale($value);
    -o-transform: scale($value);
    -ms-transform: scale($value);
    transform: scale($value);
}

@mixin transform-translate-x($value) {
    -webkit-transform: translate3d($value, 0, 0);
    -moz-transform: translate3d($value, 0, 0);
    -o-transform: translate3d($value, 0, 0);
    -ms-transform: translate3d($value, 0, 0);
    transform: translate3d($value, 0, 0);
}

@mixin transform-translate-y($value) {
    -webkit-transform: translate3d(0, $value, 0);
    -moz-transform: translate3d(0, $value, 0);
    -o-transform: translate3d(0, $value, 0);
    -ms-transform: translate3d(0, $value, 0);
    transform: translate3d(0, $value, 0);
}

@mixin transform-origin($coordinates) {
    -webkit-transform-origin: $coordinates;
    -moz-transform-origin: $coordinates;
    -o-transform-origin: $coordinates;
    -ms-transform-origin: $coordinates;
    transform-origin: $coordinates;
}

@mixin black-filter() {
    background: rgba(0, 0, 0, .55);
    position: absolute;
    width: 100%;
    height: 100%;
    content: "";
    z-index: 0;
    left: 0;
    top: 0;
}

@mixin tag-color ($color) {
    background-color: $color;
    color: $white-color;
}

@mixin rotate-180() {
    filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);
    -webkit-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    transform: rotate(180deg);
}

@mixin linear-gradient($color1, $color2) {
    background: $color1;
    /* For browsers that do not support gradients */
    background: -webkit-linear-gradient(60deg, $color1, $color2);
    /* For Safari 5.1 to 6.0 */
    background: -o-linear-gradient(60deg, $color1, $color2);
    /* For Opera 11.1 to 12.0 */
    background: -moz-linear-gradient(60deg, $color1, $color2);
    /* For Firefox 3.6 to 15 */
    background: linear-gradient(60deg, $color1, $color2);
    /* Standard syntax */
}

@mixin set-background-color-button($color) {

    li.active {
        background-color: $color;
        @include shadow-big-color($color);
    }
}


// Mixins for buttons
@mixin btn-styles($btn-color) {

    // remove this line if you want black shadows
    @include shadow-2dp-color($btn-color);

    &,
    &:hover,
    &:focus,
    &:active,
    &.active,
    &:active:focus,
    &:active:hover,
    &.active:focus,
    &.active:hover,
    .open > &.dropdown-toggle,
    .open > &.dropdown-toggle:focus,
    .open > &.dropdown-toggle:hover {
        background-color: $btn-color;
        color: $white-color;
    }

    &:focus,
    &:active,
    &:hover {
        // remove this line if you want black shadows
        @include button-shadow-color($btn-color);
    }

    &.btn-simple {
        background-color: transparent;
        color: $btn-color;
        box-shadow: none;

        &:hover,
        &:focus,
        &:active {
            background-color: transparent;
            color: $btn-color;
        }
    }

}